* {
  box-sizing: border-box;
}

body {
  font-family: Arial;
  margin: 0;
}

header {
  padding: 40px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What happens when we set the display property to flex? 
TODO: Write your answer here 
Items will display in a row by default and this is the main axis, the other axis (in this case vertical) is the cross axis. fdfffffffffff
Expands elements to fit in the free space 
*/
nav {
  display: flex;
  background-color: #d8a47f;
}

nav a {
  color: #13293d;
  padding: 14px 20px;
  text-decoration: none;
  text-align: center;
}

/* 
What is the flex-wrap property? 
TODO: Write your answer here
This prevents elements from running off the page and will reposition them so that they are all in the viewport.
*/
main {
  display: flex;
  flex-wrap: wrap;
}

aside {
  flex: 1;
  background-color: #b9c6ae;
  padding: 80px;
  text-align: center;
}


footer {
  padding: 20px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What does the justify-content property do? 
TODO: Write your answer here
Align flex items (right, left, top, bottom, center, space between, space around).
*/
.products {
  flex: 4;
  background-color: #fff;
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

/* 
What is the flex property a shorthand property for?
What is it doing here? 
TODO: Write your answer here
flex: flex-grow, flex-shrink, flex-basis
flex-grow: essentially a scale value for the flex-box if the viewport grows.
flex-shrink: essentially a scale value for the flex-box if the viewport shrinks
flex-basis: The baseline value of the flex-box, essentially the width of the box.
In this case, the flex has 2 0's at the beginning and a basis of 400px. This means that the card will always be 400px if it shrinks or grows
*/
.card {
  border-style: solid;
  border-width: 1px;
  border-radius: 10px;
  padding: 10px;
  flex: 0 0 400px;
}

.card header {
  padding: 20px;
}

.card p {
  text-align: center;
}

.card img {
  width: 100%;
}

/* 
What does the flex-direction property define?
What is it doing here? 
TODO: Write your answer here 
*/
@media screen and (max-width: 768px) {
  main,
  nav {
    flex-direction: column;
  }
}
